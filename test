Deep概述
如果世间万物总是相对的，那与deep web相对的就是Surface web，它们是对web中信息深度的不同而划分出来的。Surface Web 是指可以由传统的搜索引擎（如，Google、Yahoo），而Deep Web则是指不能被传统的搜索引擎搜索到的Web信息。绝大部分这些隐藏信息搜索到的Web信息是须通过动态请求产生的网页信息，而标准的搜索引擎却无法对其进行查找。
整个 Web 看似杂乱无章,但如果按其所蕴涵信 息的“深度”可以划分为 Surface Web 和 Deep Web 两大部分. Surface Web 是指通过超链接可以被传 统搜索引擎索引到的页面的集合. Deep Web 是指 Web 中不能被传统的搜索引擎索引到的那部分内 容. 广义上来说 ,Deep Web 的内容主要包含 4 个方 面:(1)通过填写表单形成对后台在线数据库的查 询而得到的动态页面;(2)由于缺乏被指向的超链 接而没有被搜索引擎索引到的页面, 大约占整个比 例的 21. 3 %;(3)需要注册或其它限制才能访问的 内容 ;(4)Web 上可访问的非网页文件,比如图片文 件 、PDF 和 Word 文档等. 而在实际中应用中, 人们则更关注于 Deep Web 中的第一部分内容. 其原因不难理解. 这部分 内容对结构化数据的集成更有意义, 可以采用的技 术也更丰富. Deep Web 数据集成也主要是指对结 构化信息的集成. 我们同时把 Web 中可访问的在线 数据库称为 Web 数据库或 WDB. 这些内容只有在 被查询时才会由 Web 服务器动态生成页面, 把结果 返回给访问者(图 1), 因此没有超链接指向这些页 面 ,这是和那些可以被直接访问的静态页面的根本 区别. 随着 Web 相关技术的日益成熟和 Deep Web 所蕴含信息量的快速增长, 通过对 Web 数据库的访 问逐渐成为获取信息的主要手段 , 而对 Deep Web 的研究也越来越受到人们的关注。
我们看到在线（尤其是WWW）上可用的结构化信息源数量迅速增加。这些资源包括产品的商业数据库信息，股市信息，房地产，汽车和娱乐。我们会喜欢使用存储在这些数据库中的数据来回答超出关键字的复杂查询搜索。我们面临以下挑战：（1）几个信息源相互关联
数据，任何查询-回答系统都必须了解其内容之间的关系。 （2）许多来源不是功能齐全的数据库系统，只能回答一小部分对其数据进行查询（例如，WWW上的表单会限制一组查询）。 （3）由于来源非常多，因此需要有效的技术来修剪用来回答查询的一组信息源。 （4）与每个人互动的细节来源差异很大。我们描述了信息流形，这是一个提供统一访问权限的已实施系统
与传统的Surface web相比，deep web有着自己鲜明的特点。比如它蕴含的信息量丰富，大约是Surfaceweb的400-500倍；访问量更大，要比Surface web高出15%；信息质量高：Deep Web 蕴含的信息量比 Surface Web 的质量更高；增长速度快：Deep Web 的要远增长速度大于 Surface We；专注于特殊领域：超过 50 %的 Deep Web 内容是特定于某个域的，即面向某个领域；领域覆盖广：整个 Deep Web 覆盖了现实世界中的各个领域，比如商业、教育、政府等等；信息公开免费：Deep Web 上 95 %的信息是可以公开访问的，即免费获取。如果将其与传统的搜索引擎相比，虽然它们对信息的访问都是通过在查询接口上提交查询，但它们数据类型、搜索方式、结果排序又有着很大的差别。
虽然整个 Deep Web 中几乎包含了大量我们所需要的信息 ,但要想以手工的方式对其加以有效的利用在实际当中是一件非常困难的事情, 而对 DeepWeb 数据的集成正是为了以尽可能自动的方式来完成对 Web 数据库中信息的有效利用. 在 DeepWeb数据集成领域存在着许多的研究问题, 已有的工作主要集中这些问题：Web 数据库的发现、查询接口模式的抽取 、Web 数据库的分类、查询接口的集成 、查询的转换 、查询结果的抽取、查询结果的注释等。
可以将它们分成三个部分，分别是：
（一）查询接口集成模块（数据源的发现）：它的功能是为用户提供一个统一的查询接口，使之可以同时向多个统一领域内的查询接口提交查询。由Web 数据库的发现、查询接口模式的抽取、基于领域 Web 数据库的分类、查询接口组成。
（二）查询处理模块（查询处理）功能：它的功能是将用户在集成的查询接口上填写的查询转化到对各个 Web 数据库本地查询接口的查询。由Web 数据库的选择、查询转换、查询提交组成。
（三）查询结果处理模块（结果处理）它的功能是将各个 Web 数据库返回的结果抽取并合并到一个统一的结构化模式。由结果的抽取、结果的注释、结果的合并组成。
这里主要介绍一下查询转换部分。Deep Web 的自治性导致了形形色色的 Web 数
据库查询接口，它们在查询的形式和能力上各不相同，这给查询转换工作，即将用户查询从集成查询接口转换到各 Web 数据库查询接口的过程，增加了很大的难度。目前相关的研究工作主要是基于规则的查询转换、基于谓词的查询转换和基于能力的查询转换。
基于规则的查询转换
基于规则的查询转化又可以分为基于静态规则的查询转换和基于动态规则的查询转化。基于静态规则的查询转换方法由文献[43-44]提出，它是指通过手工指定规则的方式实现了约束的语义映射，而且转换规则不仅考虑了简单约束之间的转换，也考虑了有依赖关系的复杂约束之间的转换。对于Web 数据库接口不支持的约束，则放宽规则中的条件，选择一个最接近的约束进行转换。由于这些规则是预先由领域专家给定的，不具有一般性和可扩展性，因此基于手工规则的查询转换只适用于规模较小的Web 数据源的集成，而在Deep Web数据库集成环境下，数据源数量多且经常变化，将集成接口的约束与每一个Web 数据库接口的约束建立一套规则并手工维护显然是极其繁琐的。
	文献[45]提出基于动态规则的查询转换方法，它则是首先为查询接口的属性构造概念层次关系，将相关的信息分为一组，表达更高级别的概念。其目标是自动构造一组约束映射规则，以便系统可以将查询从集成接口转换为基于它们的Web数据库接口。他们提出为查询接口的属性构造一个概念层次结构，尤其是为每个概念存储同义词和类型（例如，数字，文本等）。 同时，如有必要，我们为某些概念构造数据层次结构。 然后提出了一种基于这些层次结构生成约束映射规则的算法。 该方法适合此类应用程序的可伸缩性，并且由于其与域无关的功能，可以轻松地从一个域扩展到另一个域。 实验结果表明了其有效性和有效性。在概念层次关系中，除了存储属性名外，还存储了该属性的同义词以及属性的数据类型，用以辅助判断不同属性之间的匹配关系。同时为一些概念构造数据层次关系。基于两种层次关系，提出了建立动态规则的算法。此方法能够适应大规模的 Deep Web 数据集成，而且由于其不依赖于域，具有良好的可扩展性。
	基于谓词的查询转换
文献[46-47]在集成接口与 Web数据库查询接口模式匹配的基础上，提出了基于数据类型的谓词匹配方法。该方法基于两个观察：首先，在 150 个 Web 数 据库查询接口中，共有 37 个模板，其中两个使用最多的谓词模板分别是[attr；default；Sval]和[attr；default； Sval∈{D}]。其次，将谓词模板 Pi和 Pj的谓词对应关系 （即两个谓词出现在不同的谓词模板中，且表达的是同一概念）记录在对应关系矩阵 CM 中。从统计结果看，谓词的对应关系经常存在于数据类型相同的谓词模板之间。且这一特征不仅与具体Web数据库无 关，而且与具体的域无关。基于上述观察，文献[46]给 出了不同数据类型进行近似转换的方法。对于数字类型的谓词模板，采用向数字轴投影的方式，选择最小包含的区域。时间类型的谓词模板的转换方法与数字 类型的类似。对于文本类型的谓词模板之间的近似转换，通过构造完备的数据库，找到最小且又覆盖所有 可能映射的搜索空间，从而找到最优的近似转换。此方法较好地解决了近似查询转换的问题。
文献[48]则针对范围谓词，提出了基于多元回归代价模型的查询转换方法。他们提出了一种基于统计分析的多元回归成本模型（MrCoM），用于涉及数字范围属性的全局范围查询。 使用MrCoM，可以推断出新的全局范围查询的查询转换策略。我们还提出了一种基于预处理的逐步算法（PSA），用于将大量独立变量选择到MrCoM中。实验结果表明，MrCoM适应性良好，查询策略选择的准确性较高。数字型范围谓词（例如： {Price（8 000，12 000）}）的转换有两种方式，一种是基 于最小覆盖的转换方式（例如：{Price（0，5 000）}， {Price（5 000，10 000）}，{Price（10 000，15 000）}），这样 的返回结果最少，但由于需要多次查询 Web 数据库， 因此总的时间代价可能较高；另一种则是基于最大覆 盖的转换方式（例如：{Price（all/any）}），虽然返回的结 果较多，但由于只需要查询 Web 数据库一次，因此总 的时间代价可能较低。该方法分析了影响范围谓词转 换代价的诸多因素，如：全局查询范围的大小，Web数据库查询接口上该属性的最大查询范围及最小查 询的粒度，属性值的分布特征及全局查询属性值所处 的位置等，建立了多元回归代价模型。对于给定的包含范围谓词的用户查询，由代价模型可以较准确地推断采用最小覆盖方式还是最大覆盖方式所付出的代 价相对较少，从而可为范围谓词提供转换的依据。
基于能力的查询转换
文献[38]在集成接口与 Web 数据库查询接口模式匹配的基础上，提出用能力记录 CR（capability records）描述数据源的查询能力，进而实现查询转换的方法。系统IM（information manifold）收集了 WWW 上的 100 多个异构数据源，IM 给出了统一的查询接口，提出了查询能力的机制，并为数据源的查询能力建模，以便创建可以执行的查询计划。其通过提供一种声明式描述内容的机制来解决上述问题和可用信息源的查询功能。两者之间有清晰的分隔声明性源描述以及与信息源进行交互的实际详细信息。我们描述了使用源描述来有效修剪信息集的算法给定查询的资源和实用算法以生成可执行查询计划。查询我们生成的计划可能涉及查询多个信息源并组合其答案。我们还提供了一些实验研究，这些研究表明信息集成块可扩展到数百个信息源。CR 规定了可 以给数据源什么样的参数。一个数据源关系 R（X）的 参数是 R 的属性。每个数据源关系与一个能力记录 相联系，其形式是（Sin ，Sout ，Ssel ，min，max），其中 Sin 、 Sout 、Ssel 是 R 的参数集，Sin 是可以输入的参数，Sout 是 数据源可以返回的参数，Ssel是 Sin和 Sout并集的子集， 是在其上做选择操作的参数集，min 和 max 是允许出 现的输入参数的最小和最大个数。通过 CR 可以有效 地进行查询转换。 Web 数据库的查询接口对查询实例有一定的要 求，为保证查询转换得到的查询的有效性，文献[49] 提出了基于原子查询自动构造 Web 数据源查询接口 的查询能力模型的方法。首先给出了原子查询的定 义：属性集合 S={AU1，…，AUn }是原子查询，当且仅当 它的任何子集 T 都不是有效查询，即原子查询是具 有最小属性集的有效查询。构造查询能力模型的过程 是发现所有可能的原子查询集合的过程。算法的基本思想如下：包含任一排他属性（exclusive attribute）的 查询为一个原子查询；如果没有排他属性，则给定一 个查询，如果其任意子集均不是原子查询，则提交该 查询，下载结果页面，分析结果页面的有效性，若结果 页面是有效页面，则该查询为原子查询，加入原子查 询集合。找出所有的原子查询即得到查询能力模型。
Web 数据库的自治性导致了其查询接口形式的 多样性和查询能力的差异性。将用户查询从集成接口 转换到 Web 数据库查询接口时，往往只能进行近似的查询转换，而为了减少网络传输和对查询结果处理 的代价，需要选择基于最小超集的查询转换方法。目 前相关的研究工作都是针对合取（conjunctive）谓词 逻辑的，而有相当多的 Web 数据库查询接口是用互斥 （exclusive）谓词逻辑表达的，即每次提交的查询只能 包含某一个属性及其值，相应地，估计每个属性及其 值的选择性则是基于最小超集的查询转换方法的关 键，这是查询转换中亟待解决的问题。 总而言之，Deep Web 数据集成中的查询处理是 近年来信息领域的一个研究热点。本文介绍了其主要 的研究点：模式匹配、数据源的选择和查询转换，并回 顾了近年来该领域具有代表性的研究成果，同时指出了未来的研究方向。
